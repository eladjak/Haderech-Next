#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "Running pre-push checks..."

# Check for bypass flags in commit messages
LAST_COMMIT_MSG=$(git log -1 --pretty=%B)
if echo "$LAST_COMMIT_MSG" | grep -q "\[skip-checks\]" || echo "$LAST_COMMIT_MSG" | grep -q "\[no-verify\]"; then
  echo "üöß Bypassing pre-push checks due to [skip-checks] or [no-verify] flag in commit message"
  exit 0
fi

# Check if this is a WIP commit
if echo "$LAST_COMMIT_MSG" | grep -q "^WIP:"; then
  echo "üöß Bypassing pre-push checks for WIP commit"
  exit 0
fi

# Check if --no-verify was used on the command line
if echo "$GIT_PUSH_OPTIONS" | grep -q "no-verify"; then
  echo "üöß Bypassing pre-push checks due to --no-verify flag"
  exit 0
fi

# Check environment variable for bypassing checks
if [ "$SKIP_GIT_HOOKS" = "1" ]; then
  echo "üöß Bypassing pre-push checks due to SKIP_GIT_HOOKS=1 environment variable"
  exit 0
fi

# Run build checks before pushing
echo "üîç Running build checks..."
pnpm run check-build

# If the checks fail, prevent the push
if [ $? -ne 0 ]; then
  echo "‚ùå Pre-push checks failed. Fix the issues before pushing."
  echo "üí° To bypass checks in emergency, use one of the following methods:"
  echo "   1. Add [skip-checks] or [no-verify] to your commit message"
  echo "   2. Use WIP: prefix in your commit message"
  echo "   3. Set SKIP_GIT_HOOKS=1 in your environment"
  echo "   4. Use git push --no-verify"
  exit 1
fi

echo "‚úÖ Pre-push checks passed!" 